<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ page import="java.util.*"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>ボデータイプメンテナンス</title>
<c:import url="/WEB-INF/views/common/header.jsp" />
<style type="text/css">
ul.tabs {
	margin: 0;
	padding: 0;
	float: left;
	list-style: none;
	height: 32px;
	border-bottom: 1px solid gray;
	border-left: 1px solid gray;
	width: 100%;
	font-family: "dotum";
	font-size: 12px;
}

ul.tabs li {
	float: left;
	text-align: center;
	cursor: pointer;
	width: 82px;
	height: 31px;
	line-height: 31px;
	border: 1px solid gray;
	border-left: none;
	font-weight: bold;
	background: #fafafa;
	overflow: hidden;
	position: relative;
}

ul.tabs li.active {
	background: #FFFFFF;
	border-bottom: 1px solid #FFFFFF;
}

.tab_container {
	border: 1px solid gray;
	border-top: none;
	clear: both;
	float: left;
	width: 100%;
	height: 250px;
	background: #FFFFFF;
}

.tab_content {
	padding: 5px;
	font-size: 12px;
	display: none;
}
/* tr:nth-of-type(2n) { */
/*   background-color: red; */
/* } */
.tab_container .tab_content ul {
	width: 100%;
	margin: 0px;
	padding: 0px;
}

.tab_container .tab_content ul li {
	padding: 5px;
	list-style: none
}

;
#container {
	width: 249px;
	margin: 0 auto;
}

.highlight {
	background-color: lime;
}
.oddRow {
	background-color: #00FFFF;
}

.evenRow {
	background-color: white;
}
</style>

<script type="text/javascript">

	$(document).ready(function() {
        
		$(".tab_content").hide();
		$(".tab_content:first").show();

		$("#tb").jqGrid({
			colNames : ["", "表示順", "ボデータイプ" ], // colname
			colModel : [ // 
			{
					name : '',
			},{
				name : 'combotype',
				editable : true,
			}, {
				name : 'comboname',
				editable : true,
			}, ],
			height : 100, //or auto, defaultHeight
			width : 300,
			// 			//	 			autowidth : false,

					autowidth : false,
					shrinkToFit : true,
					// 					rowNum : 50, rownum	
					pager : "#pager", //paging
					// 					viewrecords : true,
					// 					multiselect : true,
					// 					rownumbers : true,
					useColSpanStyle : true,
					emptyrecords : "empty",
// 			loadComplete : addData(),
			beforeSelectRow : function(rowid, e) {
				var $this = $(this), $td = $(e.target).closest('td'), $tr = $td
						.closest('tr'), iRow = $tr[0].rowIndex, iCol = $.jgrid
						.getCellIndex($td);

				if (typeof lastRowIndex !== "undefined"
						&& typeof lastColIndex !== "undefined"
						&& (iRow !== lastRowIndex || iCol !== lastColIndex)) {
					$this.jqGrid('setGridParam', {
						cellEdit : true
					});
					$this.jqGrid('restoreCell', lastRowIndex,
							lastColIndex, true);
					$this.jqGrid('setGridParam', {
						cellEdit : false
					});
					$(this.rows[lastRowIndex].cells[lastColIndex])
							.removeClass("ui-state-highlight");
				} else {
				}
				return true;
			},
			cellsubmit : 'clientArray',
			ondblClickRow : function(rowid, iRow, iCol) {
				var $this = $(this);

				$this.jqGrid('setGridParam', {
					cellEdit : true
				});
				$this.jqGrid('editCell', iRow, iCol, true);
				$this.jqGrid('setGridParam', {
					cellEdit : false
				});
			},
			afterEditCell : function(rowid, cellName, cellValue, iRow) {
				var cellDOM = this.rows[iRow], oldKeydown, $cellInput = $(
						'input, select, textarea', cellDOM), events = $cellInput
						.data('events'), $this = $(this);
				if (events && events.keydown && events.keydown.length) {
					oldKeydown = events.keydown[0].handler;
					$cellInput.unbind('keydown', oldKeydown);
					$cellInput.bind('keydown', function(e) {
						$this.jqGrid('setGridParam', {
							cellEdit : true
						});
						oldKeydown.call(this, e);
						$this.jqGrid('setGridParam', {
							cellEdit : false
						});
					});
				}
			},

			onCellSelect : function(id, cellidx, cellvalue) { // use this event to capture edited cellID
				selectedCellId = cellidx; // save the cellId to a variable
			},
			loadComplete : function(data) {
				$("tr.jqgrow:odd").addClass("oddRow");
				$("tr.jqgrow:even").addClass("evenRow");
			}
		});

			//票生成
			var totalInfo= ${list};
	        $("#tb").addRowData(1,totalInfo);

	        //行追加
	        $("#rowAdd").click(function(){
	        	var sel = $("#tb").jqGrid('getGridParam', "selrow");
	    		var result = $("#tb").getGridParam("reccount") + 1;
	    		var initdata = {
	    			abc : '',
	    			combotype : '',
	    			comboname : ''
	    		};
	    		alert(initdata);
	    		$("#tb").jqGrid('addRowData', result, initdata, 'before', sel);
// 	    		$("table").removeClass("oddEeveRow");
// 	    		jQuery("table").addClass("oddEeveRow");
//	     		alert(true);
//	     		console.log(rowId);

	        });
	        
	        //保存ボタン押下場合
	        $("#saveData").click(function(){
	        	 $.ajaxSettings.traditional = true;
	        	 var arr = new Array();
	        	 var rowList = $("#tb").jqGrid("getDataIDs");
	        	 for(var i =0; i<rowList.length;i++){
	        		 var rowData = $("#tb").jqGrid('getRowData',rowList[i]);
	        		 arr.push(rowData);
	        	 }
	        	 var json = JSON.stringify(arr);
	        	 alert(json);
	        	 
	        	$.ajax({
        	        url:"/abcd.ajax",
        	        type:'POST',
        	        data: {'gridData':json},
        	        success:function(data){
        	            alert("保存を完了しました!");
        	            window.opener.location.reload();
        	            self.close();
        	        },
        	        error:function(jqXHR, textStatus, errorThrown){
        	            alert("error 発生 　:　" + textStatus + " : " + errorThrown);
        	            self.close();
        	        }
        	    });
	        });
	        
	        $("#rowidShow").click(function(){
	        	alert($("#tb").getGridParam( "selrow" ));
	        });
	        
	        //delete-Keyを押下場合、選択された行を削除
	        $(document).keydown(function(event) {
	        	var rowid = $("#tb").getGridParam( "selrow" );
	        	if (event.keyCode == '46' && rowid!=null ) {
	        		var row = $("#tb").jqGrid('getRowData',rowid);
	        		var comboname = row.comboname
	        		alert(comboname);
	        		$.ajax({
	        	        url:"/popManageNewCarBody.ajax",
	        	        type:'POST',
	        	        data: {'comboname':comboname},
	        	        success:function(data){
	        	        	$("#tb").delRowData(rowid);
	        	            alert("削除を完了しました!");
	        	            window.opener.location.reload();
	        	            self.close();
	        	        },
	        	        error:function(jqXHR, textStatus, errorThrown){
	        	            alert("error 発生 　:　" + textStatus + " : " + errorThrown);
	        	            self.close();
	        	        }
	        	    });
	        		}
	        	});
	        
	        
	       
	});

</script>
</head>

<body>

	<div
		style="border: 1px solid gray; height: auto; width: 500px; padding: 0px; padding-bottom: 10px">
		<div style="background-color: #8BBDFF;">ボデータイプメンテナンス</div>
		<div id="container" style="height: 290px; padding: 5px;">
			<ul class="tabs">
				<li class="active" rel="tab1">ボデータイプ</li>
				<!-- 				<li rel="tab2">aaaaaaaaaa</li> -->
				<!-- 				<li rel="tab3">bbbbbbbbbb</li> -->
			</ul>
			<div class="tab_container">
				<div id="tab1" class="tab_content">
					<table id="tb">
					</table>

				</div>
			</div>
			<!-- .tab_container -->
		</div>
		<!-- #container -->

		<div>
			<input type="button" name="" value="閉じる" onclick="window.close();">
			<input type="button" name="" value="行追加" id="rowAdd">
			<input type="button" name="" value="保存" id="saveData">
			<input type="button" name="" value="rowidShow" id="rowidShow">
		</div>
	</div>

</body>
</html>